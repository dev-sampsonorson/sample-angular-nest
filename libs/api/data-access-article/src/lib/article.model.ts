import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';
import { ApiProperty } from '@nestjs/swagger';
import { Document } from 'mongoose';

/**
 * In real world project, you will not want to expose
 * the model/schema as the public api of the data access layer
 * because the model/schema is the contract between your application
 * and the database. You want you service to manage that, nothing else.
 *
 * Normally, you will have an ArticleDto and a transformation layer in
 * between. Which will be responsible for transforming your Article (model/schema)
 * to ArticleDto.
 */
@Schema({
    timestamps: true
})
export class Article {
    @Prop() @ApiProperty() text: string;
    @Prop() @ApiProperty() author: string;
}

/**
 * Document will have _id generated by mongoose
 */
export type ArticleDocument = Article & Document;

export const ArticleSchema = SchemaFactory.createForClass(Article);
